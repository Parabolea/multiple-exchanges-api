services:
  redis:
    image: redis
    container_name: redis_server
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data  # Persist data
    command: ["redis-server", "--appendonly", "yes"]
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - redis_network

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: node_app
    depends_on:
      redis:
        condition: service_healthy
    env_file:
      - .env
#    ports:
#      - "3001:7497"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - traefik
      - redis_network
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik"
      - "traefik.http.services.app.loadbalancer.server.port=8080"
      - "traefik.http.routers.app-http.rule=Host(`dbapi.allview-parabolea.com`)"
      - "traefik.http.routers.app-http.entrypoints=http"
      - "traefik.http.routers.app-http.middlewares=https-redirect"
      - "traefik.http.middlewares.https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.app-https.rule=Host(`dbapi.allview-parabolea.com`)"
      - "traefik.http.routers.app-https.entrypoints=https"
      - "traefik.http.routers.app-https.tls.certresolver=le"
      - "traefik.http.routers.app-https.tls.domains[0].main=dbapi.allview-parabolea.com"
      #- "traefik.http.routers.localhost3001.rule=Host(`localhost`) && Path(`/`)"
      #- "traefik.http.routers.localhost3001.entrypoints=web"
      #- "traefik.http.services.localhost3001.loadbalancer.server.port=7497"



networks:
  traefik:
    external: true
  redis_network:
    internal: true
